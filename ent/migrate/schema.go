// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AssetsColumns holds the columns for the "assets" table.
	AssetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "type", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "ip", Type: field.TypeString, Unique: true},
		{Name: "port", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AssetsTable holds the schema information for the "assets" table.
	AssetsTable = &schema.Table{
		Name:       "assets",
		Columns:    AssetsColumns,
		PrimaryKey: []*schema.Column{AssetsColumns[0]},
	}
	// AssetGroupsColumns holds the columns for the "asset_groups" table.
	AssetGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AssetGroupsTable holds the schema information for the "asset_groups" table.
	AssetGroupsTable = &schema.Table{
		Name:       "asset_groups",
		Columns:    AssetGroupsColumns,
		PrimaryKey: []*schema.Column{AssetGroupsColumns[0]},
	}
	// AssetGroupAttributesColumns holds the columns for the "asset_group_attributes" table.
	AssetGroupAttributesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "asset_group_attrs", Type: field.TypeUUID, Nullable: true},
	}
	// AssetGroupAttributesTable holds the schema information for the "asset_group_attributes" table.
	AssetGroupAttributesTable = &schema.Table{
		Name:       "asset_group_attributes",
		Columns:    AssetGroupAttributesColumns,
		PrimaryKey: []*schema.Column{AssetGroupAttributesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_group_attributes_asset_groups_attrs",
				Columns:    []*schema.Column{AssetGroupAttributesColumns[6]},
				RefColumns: []*schema.Column{AssetGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CredentialsColumns holds the columns for the "credentials" table.
	CredentialsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "username", Type: field.TypeString},
		{Name: "secret", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "asset_credentials", Type: field.TypeUUID, Nullable: true},
	}
	// CredentialsTable holds the schema information for the "credentials" table.
	CredentialsTable = &schema.Table{
		Name:       "credentials",
		Columns:    CredentialsColumns,
		PrimaryKey: []*schema.Column{CredentialsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "credentials_assets_credentials",
				Columns:    []*schema.Column{CredentialsColumns[6]},
				RefColumns: []*schema.Column{AssetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "status", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "stoped_at", Type: field.TypeTime},
		{Name: "session_asset", Type: field.TypeUUID, Nullable: true},
		{Name: "session_credential", Type: field.TypeUUID, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_assets_asset",
				Columns:    []*schema.Column{SessionsColumns[6]},
				RefColumns: []*schema.Column{AssetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_credentials_credential",
				Columns:    []*schema.Column{SessionsColumns[7]},
				RefColumns: []*schema.Column{CredentialsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AssetGroupAssetsColumns holds the columns for the "asset_group_assets" table.
	AssetGroupAssetsColumns = []*schema.Column{
		{Name: "asset_group_id", Type: field.TypeUUID},
		{Name: "asset_id", Type: field.TypeUUID},
	}
	// AssetGroupAssetsTable holds the schema information for the "asset_group_assets" table.
	AssetGroupAssetsTable = &schema.Table{
		Name:       "asset_group_assets",
		Columns:    AssetGroupAssetsColumns,
		PrimaryKey: []*schema.Column{AssetGroupAssetsColumns[0], AssetGroupAssetsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_group_assets_asset_group_id",
				Columns:    []*schema.Column{AssetGroupAssetsColumns[0]},
				RefColumns: []*schema.Column{AssetGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "asset_group_assets_asset_id",
				Columns:    []*schema.Column{AssetGroupAssetsColumns[1]},
				RefColumns: []*schema.Column{AssetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AssetsTable,
		AssetGroupsTable,
		AssetGroupAttributesTable,
		CredentialsTable,
		SessionsTable,
		AssetGroupAssetsTable,
	}
)

func init() {
	AssetGroupAttributesTable.ForeignKeys[0].RefTable = AssetGroupsTable
	CredentialsTable.ForeignKeys[0].RefTable = AssetsTable
	SessionsTable.ForeignKeys[0].RefTable = AssetsTable
	SessionsTable.ForeignKeys[1].RefTable = CredentialsTable
	AssetGroupAssetsTable.ForeignKeys[0].RefTable = AssetGroupsTable
	AssetGroupAssetsTable.ForeignKeys[1].RefTable = AssetsTable
}
